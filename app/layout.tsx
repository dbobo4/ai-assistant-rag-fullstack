import type { Metadata } from "next";
// CHANGE: switched from `next/font/google` to `next/font/local`
// WHY: Google Fonts download during Docker build was failing (ETIMEDOUT).
//      By using localFont, we load fonts directly from `public/fonts/`
//      so no external HTTP requests are needed anymore.
import localFont from "next/font/local";
import "./globals.css";

/*
================================================================================
FONT ISSUE BACKGROUND & FIX
--------------------------------------------------------------------------------
- Original code: 
    import { Inter } from "next/font/google";
    const inter = Inter({ subsets: ["latin"], display: "swap" });

- PROBLEM:
    Next.js tried to fetch fonts from:
      https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap
    and then download `.woff2` files from:
      https://fonts.gstatic.com/s/inter/v20/...
    During Docker build these requests often timed out → build failed.

- WHAT DIDN’T HELP:
    * Docker network retry configs (pnpm config set fetch-retries, etc.)
    * ENV NODE_OPTIONS="--dns-result-order=ipv4first"
    * NEXT_FONT_IGNORE_FAILED_DOWNLOADS=1
    * display: "swap" + adjustFontFallback: false
    None of these solved the root problem because Next.js still tried to fetch
    the Google-hosted fonts at build time.

- SOLUTION:
    1. Went to https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap
    2. Copied every `.woff2` URL (e.g. https://fonts.gstatic.com/...woff2)
    3. Opened them in browser, manually downloaded each file
    4. Saved them into `/public/fonts/` directory of the Next.js project
    5. Updated `layout.tsx` to use `localFont` with these local files.
    6. IMPORTANT: `localFont` needs a FILESYSTEM PATH, not a web path.
       Since `layout.tsx` is in `/app`, the correct relative path is:
       "../public/fonts/..."
       (one level up from `app/` to reach the `public/` folder)

- RESULT:
    Build no longer fails in Docker
    Fonts are served from `public/fonts/` instead of Google
    Fully offline & stable font loading
================================================================================
*/

// NEW: use local fonts instead of Google Fonts
// CHANGE: paths updated from "/fonts/..." → "../public/fonts/..."
// WHY: localFont() requires a relative filesystem path, not a public URL.
const inter = localFont({
  src: [
    { path: "../public/fonts/latin.woff2",        weight: "100 900", style: "normal" },
    { path: "../public/fonts/latin-ext.woff2",    weight: "100 900", style: "normal" },
    { path: "../public/fonts/cyrillic.woff2",     weight: "100 900", style: "normal" },
    { path: "../public/fonts/cyrillic-ext.woff2", weight: "100 900", style: "normal" },
    { path: "../public/fonts/greek.woff2",        weight: "100 900", style: "normal" },
    { path: "../public/fonts/greek-ext.woff2",    weight: "100 900", style: "normal" },
    { path: "../public/fonts/vietnamese.woff2",   weight: "100 900", style: "normal" },
  ],
  display: "swap",           // ensures fallback font is used until Inter loads
  adjustFontFallback: false, // prevents Next.js from injecting fallback font rules
});

// Standard Next.js metadata
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Root layout component
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      {/* IMPORTANT: use inter.className to apply the locally loaded Inter font */}
      <body className={inter.className}>{children}</body>
    </html>
  );
}
